====== OpenSCAD: Domácí úkol ZS 2016/2017 ======

Domácí úkoly ze semestrů minulých můžete vidět v [[classification:archive:start|archívu]].

<note important>Toto je alpha verze zadání úkolu. Hlavní podstata se měnit nebude, na úkolu můžete začít pracovat. Může ale dojít k opravě různých chyb, které nám na první pohled nedošly. Rozhraní modulu zatím není plně odladěné.</note>

====== Motivace ======

Vaším úkolem je navrhnout plně parametricky model elektrické zásuvky / prodlužovačky / rozmnožovačky / jezvčíka / psa (dále jen zásuvky). Jelikož každý designer si chce namodelovat svoji zásuvku a následně vyzkoušet jak vypadá v reálném světe. Zapojit do ní na zkoušku kabely. Přiložit ji k nábytku, jestli mu pasuje (esteticky, rozměrově). Proto máte za úkol navrhnout univerzální modul, který těmto zoufalým designérům pomůže.

(Potřeba designerů po zásuvkách je smyšlená.)

{{:classification:plugs-photo.jpg?600}}

====== Rozhraní ======

Zásuvka má tyto parametry
  * **y** vnější rozměr na ose y (více méně, viz dále)
  * **z** vnější rozměr na ose z
  * **radius_of_outlets** 	poloměr vnitřku jedné zásuvky
  * **number_of_outlets** 	počet zásuvek
  * **border_of_outlet**	tloušťka okolo jedné zásuvky
  * **offset_of_outlets**	rozestup jednotlivých zásuvek, 0 znamená že se dotýkají
  * **depth_of_outlets**	hloubka zásuvek
  * **pin_radius**			poloměr kolíků
  * **pin_depth** 			délka kolíku a hloubka děr
  * **pin_offset**			rozestup kolíků od středu
  * **pin_angle** 			úhel natočení kolíků
  * **round_r** poloměr zaoblení těla zásuvky

Jednotlivé parametry budou podrobněji vysvětleny dále.

Zásuvka má toto rozhraní včetně výchozích hodnot, které musíte zachovat:

<note important>Výchozí hodnoty budou doplněny co by dup.</note>

<code>
module plug(y, z, radius_of_outlets, number_of_outlets, border_of_outlet, offset_of_outlets, depth_of_outlets, pin_radius, pin_depth, pin_offset, pin_angle, round_r) {
   // ...
}
</code>

Váš model musí fungovat jako samostatný module pro OpenSCAD, použitelný pomocí direktivy use (nesmí obsahovat žádné konstanty mimo modul, ale je možné (a žádoucí) vytvořit si pomocné moduly). Musíte použít výše zmíněný interface (včetně stejných výchozích hodnot!).

====== Vnější tvar ======

Jednotlivé zásuvky vypadají takto:

{{:classification:plugs-multiple.svg.png?600}}

Ale levá krajní vypadá jinak:

{{:classification:plugs-start.svg.png?600}}

Celé tělo je 3D zaoblené, ale díry na zásuvky ne.

{{:classification:plugs-rounded.svg.png?600}}

====== Konkrétní popis parametrů ======

===== Šířka / osa y =====
  * Je dána tak, aby když je tloušťka okolo zásuvky tlustší než šírka, tak se ořízne.
  * Pokud je hodnota větší než průměr zásuvky a jejího tloušťky, tak se nic neořezává.
  * Pokud je šírka menší než průměr zásuvky tak se nic nevykreslí.

{{:classification:plugs-shape.svg.png?500}}

(Nevidíte-li na obrázku osy s popisky, dejte tvrdý refresh stránky, máte v cache starou verzi.)

===== Výška / osa z =====
  * Pokud je hloubka zásuvky (depth_of_outlets) a délka kolíků (pin_depth) v součtu větší a tudíž by došlo k proděravení zásuvku skrz na skrz nic se nevyskreslí.
  * Pokud je záporná nic se nevykreslí.

{{:classification:plugs-plug-depth.svg.png?600}}

===== Poloměr jedné zásuvky =====
  * Pozor nejedná se o průměr


===== Počet zásuvek =====
  * Pokud je to záporné číslo nic se nevykreslí
  * Pokud je to 0 nic se nevykreslí
  * 1 je validní počet zásuvek 

===== Tlouštka okolo jedné zásuvky =====
  * Jedná se o tlouštku stěny okolo zásuvky při pohledu ze shora
  * Může byt na ose y uříznuty v případě vhodného nastavení parametru pro osu y
  * Pokud je to záporné číslo nic se nevykreslí

===== Rozestup zásuvek =====
  * Rozestup zásuvek mezi zásuvkou
  * Pokud je 0, zásuvky se lehce dotýkají (jakoby v jednom bodě)
  * Pokud je záporný, nic se nevykreslí

{{:classification:plugs-distance.svg.png?500}}

===== Hloubka zásuvek =====
  * Hloubka jedné zásuvky
  * Pokud je hloubka zásuvky (depth_of_outlets) a délka kolíků (pin_depth) v součtu větší a tudíž by došlo k proděravení zásuvku skrz na skrz nic se nevyskreslí.
  * Pokud je to záporné číslo nic se nevykreslí

===== Poloměr kolíku =====
  * Poloměr jednoho kolíku i děr co jsou v zásuvce

===== Hloubka děr a délka kolíku =====
  * Je stejná

===== Rozestup kolíků =====
  * Pokud je rozestup 0, kolík i díry jsou na stejném místě

{{:classification:plugs-pins.svg.png?300}}

===== Úhel kolíku =====
  * Jedná se o natočení kolíků (směr viz obrázek)

{{:classification:plugs-angle.svg.png?500}}

===== Poloměr zaoblení =====
  * jak moc je tělo zásuvky zaoblené (0 - není zaoblené; N - poloměr v rohu je N)
  * nesmyslné hodnoty nebudou testovány

===== Umístění v prostoru =====

Pro naše poloautomatické testy je třeba objekt správně umístit v prostoru.

Zásuvka leží více-méně na počátku (bod 0). Osa X prochází prostředkem objektu

{{:classification:plugs-xy.svg.png?600}}

Osa Y prochází prostředkem zásuvek (ne prostředkem objektu). Pokud máme sudý počet zásuvek:

{{:classification:plugs-xy-center-even.svg.png?300}}

Pokud máme lichý počet zásuvek:

{{:classification:plugs-xy-center-odd.svg.png?300}}

Celý objekt leží na rovině XY, tzn nezasahuje do záporného Z:

{{:classification:plugs-z.svg.png?500}}

===== Poznámky =====
  * Rozměr na ose X není schválně zadán, protože zásuvka bude mít délku podle nastavených parametrů.


====== Kód ======

Kód musí splňovat určitou kvalitu, jednou z podmínek je logické dodržení odsazení (v celém souboru stejné). Opakované konstrukce musí být implementovány vlastními moduly a forcykly. Magické konstanty musí být samovysvětlující, nebo doplněné o komentář. Není možné použít žádné externí knihovny pro OpenSCAD, ani knihovnu MCAD. Manipulace s ''$fn'', ''$fs'' a ''$fa'' je přísně zakázána.


====== Odevzdání ======

Odevzdává se dle instrukcí na [[https://github.com/3DprintFIT/B161HW-Template#zadání-domácího-úkolu|GitHubu]]

Deadline je 7.12.2016 včetně.